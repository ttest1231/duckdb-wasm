name: 'Main'
on:
    push:
    pull_request:
    create:
        tags:
            - v*
    workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/master' || github.sha }}
  cancel-in-progress: true

jobs:
    clang_format:
        name: Clang-Format
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'

            - name: Lint ./lib
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      python3 ./scripts/run_clang_format.py \
                        --exclude ./lib/build \
                        --exclude ./lib/third_party \
                        -r ./lib/

    eslint:
        name: ESLint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'

            - name: Cache node_modules
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ./packages/benchmarks/node_modules
                      ./packages/duckdb-wasm/node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Prepare repository
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      yarn install --frozen-lockfile --prefer-offline

            - name: Lint duckdb-wasm-es-wasm
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      yarn workspace duckdb-wasm-es-wasm run lint

            - name: Lint @duckdb/benchmarks
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      yarn workspace @duckdb/benchmarks run lint

    tpchgen:
        name: TPCH Generator
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'

            - name: Cache generator
              uses: actions/cache@v3
              id: cache-generator
              with:
                  path: ./submodules/tpch-dbgen/dbgen/dbgen
                  key: ${{ runner.os }}-tpch-dbgen

            - name: Build generator
              if: steps.cache-generator.outputs.cache-hit != 'true'
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      make -C ./submodules/tpch-dbgen/dbgen/ dbgen

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: tpch-dbgen
                  path: |
                      ./submodules/tpch-dbgen/dbgen/dbgen
                  retention-days: 1

    dataprep:
        name: Dataprep
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'

            - name: Cache rust build
              uses: actions/cache@v3
              with:
                  path: |
                      ./.cargo/bin/
                      ./.cargo/registry/index/
                      ./.cargo/registry/cache/
                      ./.cargo/git/db/
                      ./target
                  key: ${{ runner.os }}-dataprep-${{ hashFiles('./Cargo.lock') }}-${{ hashFiles('./tools/dataprep/src/*.rs') }}
                  restore-keys: |
                      ${{ runner.os }}-dataprep-

            - name: Build generator
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      cargo build --manifest-path=./Cargo.toml --release -p dataprep

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: dataprep
                  path: |
                      ./target/release/dataprep
                  retention-days: 1


    native_debug:
        name: Native / Debug
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - tpchgen
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v3
              with:
                  name: dataprep
                  path: ./target/release/

            - uses: actions/download-artifact@v3
              with:
                  name: tpch-dbgen
                  path: ./submodules/tpch-dbgen/dbgen/

            - name: Git submodule status
              run: |
                  git submodule status > git_submodule_status.txt

            - name: Cache native build
              uses: actions/cache@v3
              with:
                  path: |
                      ./.cargo/bin/
                      ./.cargo/registry/index/
                      ./.cargo/registry/cache/
                      ./.cargo/git/db/
                      ./.ccache
                      ./.emscripten_cache
                  key: ${{ runner.os }}-native2-debug-${{ hashFiles('git_submodule_status.txt') }}-${{ hashFiles('lib/src/**') }}-${{ hashFiles('lib/include/**') }}
                  restore-keys: |
                      ${{ runner.os }}-native2-debug-${{ hashFiles('git_submodule_status.txt') }}
                      ${{ runner.os }}-native2-debug-
                      ${{ runner.os }}-native2-

            - name: Prepare repository
              run: |
                  chown -R $(id -u):$(id -g) $PWD
                  (cd ./submodules/duckdb && git fetch --all --tags)
                  [ -f duckdb.patch ] && cd submodules/duckdb && git apply ../../duckdb.patch || echo "No patching needed"

            - name: Prepare environment
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      mkdir -p ./lib/build/debug ./reports
                      ./scripts/generate_tpch_tbl.sh 0.01
                      ./scripts/generate_tpch_arrow.sh 0.01
                      ./scripts/generate_uni.sh
                      ccache --max-size 200M
                      ccache -s

            - name: Build project
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      cmake \
                          -S./lib/ \
                          -B./lib/build/debug \
                          -DCODE_COVERAGE=1 \
                          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
                          -DCMAKE_C_COMPILER=clang \
                          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                          -DCMAKE_CXX_COMPILER=clang++ \
                          -DCMAKE_BUILD_TYPE=Debug
                      ccache -z
                      make -C./lib/build/debug -j`nproc` || exit 1
                      ccache -s


    native_release:
        name: Native / Release
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - tpchgen
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v3
              with:
                  name: dataprep
                  path: ./target/release/

            - uses: actions/download-artifact@v3
              with:
                  name: tpch-dbgen
                  path: ./submodules/tpch-dbgen/dbgen/

            - name: Git submodule status
              run: |
                  git submodule status > git_submodule_status.txt

            - name: Cache native build
              uses: actions/cache@v3
              with:
                  path: |
                      ./.cargo/bin/
                      ./.cargo/registry/index/
                      ./.cargo/registry/cache/
                      ./.cargo/git/db/
                      ./.ccache
                      ./.emscripten_cache
                  key: ${{ runner.os }}-native2-release-${{ hashFiles('git_submodule_status.txt') }}-${{ hashFiles('lib/src/**') }}-${{ hashFiles('lib/include/**') }}
                  restore-keys: |
                      ${{ runner.os }}-native2-release-${{ hashFiles('git_submodule_status.txt') }}
                      ${{ runner.os }}-native2-release-
                      ${{ runner.os }}-native2-

            - name: Prepare repository
              run: |
                  chown -R $(id -u):$(id -g) $PWD
                  (cd ./submodules/duckdb && git fetch --all --tags)
                  [ -f duckdb.patch ] && cd submodules/duckdb && git apply ../../duckdb.patch || echo "No patching needed"

            - name: Prepare environment
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      mkdir -p ./lib/build/release ./reports
                      ./scripts/generate_tpch_tbl.sh 0.01
                      ./scripts/generate_tpch_arrow.sh 0.01
                      ./scripts/generate_uni.sh
                      ccache --max-size 200M
                      ccache -s

            - name: Build project
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      cmake \
                          -S./lib/ \
                          -B./lib/build/release \
                          -DCODE_COVERAGE=1 \
                          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
                          -DCMAKE_C_COMPILER=clang \
                          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                          -DCMAKE_CXX_COMPILER=clang++ \
                          -DCMAKE_BUILD_TYPE=Release
                      ccache -z
                      make -C./lib/build/release -j`nproc` || exit 1
                      ccache -s

            

    wasm_mvp:
        name: Wasm / mvp
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - tpchgen
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: mymindstorm/setup-emsdk@v12
              with:
                  version: 3.1.24

            - name: Setup Ccache
              uses: hendrikmuhs/ccache-action@main
              with:
                  key: ${{ github.job }}

            - name: Git submodule status
              run: |
                  git submodule status > git_submodule_status.txt

            - name: Build Wasm module
              run: |
                  ./scripts/wasm_build_lib.sh relperf mvp

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: wasm-mvp
                  path: |
                      ./packages/duckdb-wasm/src/bindings/duckdb-mvp.js
                      ./packages/duckdb-wasm/src/bindings/duckdb-mvp.wasm
                  retention-days: 1
    wasm_ehsimd:
        name: Wasm / ehsimd
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - tpchgen
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: mymindstorm/setup-emsdk@v12
              with:
                  version: 3.1.24

            - name: Setup Ccache
              uses: hendrikmuhs/ccache-action@main
              with:
                  key: ${{ github.job }}

            - name: Git submodule status
              run: |
                  git submodule status > git_submodule_status.txt

            - name: Build Wasm module
              run: |
                  ./scripts/wasm_build_lib.sh relperf ehsimd

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: wasm-ehsimd
                  path: |
                      ./packages/duckdb-wasm/src/bindings/duckdb-ehsimd.js
                      ./packages/duckdb-wasm/src/bindings/duckdb-ehsimd.wasm
                  retention-days: 1
    
    wasm_eh:
        name: Wasm / eh
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - tpchgen
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: mymindstorm/setup-emsdk@v12
              with:
                  version: 3.1.24

            - name: Setup Ccache
              uses: hendrikmuhs/ccache-action@main
              with:
                  key: ${{ github.job }}

            - name: Git submodule status
              run: |
                  git submodule status > git_submodule_status.txt

            - name: Build Wasm module
              run: |
                  ./scripts/wasm_build_lib.sh relperf eh

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: wasm-eh
                  path: |
                      ./packages/duckdb-wasm/src/bindings/duckdb-eh.js
                      ./packages/duckdb-wasm/src/bindings/duckdb-eh.wasm
                  retention-days: 1

    wasm_coi:
        name: Wasm / coi
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - tpchgen
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: mymindstorm/setup-emsdk@v12
              with:
                  version: 3.1.24

            - name: Setup Ccache
              uses: hendrikmuhs/ccache-action@main
              with:
                  key: ${{ github.job }}

            - name: Git submodule status
              run: |
                  git submodule status > git_submodule_status.txt

            - name: Build Wasm module
              run: |
                  ./scripts/wasm_build_lib.sh relperf coi

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: wasm-coi
                  path: |
                      ./packages/duckdb-wasm/src/bindings/duckdb-coi.js
                      ./packages/duckdb-wasm/src/bindings/duckdb-coi.pthread.js
                      ./packages/duckdb-wasm/src/bindings/duckdb-coi.wasm
                  retention-days: 1

    js_libs:
        name: Js / Libraries
        runs-on: ubuntu-latest
        needs:
            - wasm_mvp
            - wasm_eh
            - wasm_ehsimd
            - wasm_coi
            - native_debug
            - native_release
            - clang_format
            - eslint
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/setup-node@v3
              with:
                  node-version: '16.x'
                  registry-url: 'https://registry.npmjs.org'

            - name: Git submodule status
              run: |
                  git submodule status > git_submodule_status.txt

        

            - name: Cache node_modules
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ./packages/benchmarks/node_modules
                      ./packages/duckdb-wasm/node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - uses: actions/download-artifact@v3
              with:
                  name: dataprep
                  path: ./target/release/

            - uses: actions/download-artifact@v3
              with:
                  name: tpch-dbgen
                  path: ./submodules/tpch-dbgen/dbgen/


            - uses: actions/download-artifact@v3
              with:
                  name: wasm-mvp
                  path: ./packages/duckdb-wasm/src/bindings/

            - uses: actions/download-artifact@v3
              with:
                  name: wasm-eh
                  path: ./packages/duckdb-wasm/src/bindings/
            
            - uses: actions/download-artifact@v3
              with:
                  name: wasm-ehsimd
                  path: ./packages/duckdb-wasm/src/bindings/

            - uses: actions/download-artifact@v3
              with:
                  name: wasm-coi
                  path: ./packages/duckdb-wasm/src/bindings/

            - name: Prepare repository
              run: |
                  chown -R $(id -u):$(id -g) $PWD
                  git fetch --tags --no-recurse-submodules -f
                  (cd ./submodules/duckdb && git fetch --all --tags)

            - name: Prepare environment
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      chown -R $(id -u):$(id -g) $PWD
                      git config --global --add safe.directory '*'
                      mkdir -p ./lib/build/wasm/release ./reports
                      yarn install --frozen-lockfile
                      ./scripts/generate_tpch_tbl.sh 0.01
                      ./scripts/generate_tpch_arrow.sh 0.01
                      ./scripts/generate_tpch_duckdb.sh 0.01
                      ./scripts/generate_tpch_sqlite.sh 0.01
                      ./scripts/generate_uni.sh
                      ./scripts/npm_version.sh

            - name: Build duckdb-wasm-es-wasm
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      rm -rf ./packages/duckdb-wasm/dist/
                      yarn workspace duckdb-wasm-es-wasm build:release
                      yarn workspace duckdb-wasm-es-wasm docs

            - name: Build duckdb-wasm-es-wasm-app
              uses: duckdb/duckdb-wasm-ci-env@v0.11
              with:
                  script: |-
                      rm -rf ./packages/duckdb-wasm-app/build/
                      yarn workspace duckdb-wasm-es-wasm-app build:release

            - name: Package
              shell: bash
              run: zip -r duckdb-wasm-packages.zip ./packages

            - uses: actions/upload-artifact@v3
              with:
                  name: duckdb-wasm-packages
                  path: duckdb-wasm-packages.zip

            - name: Publish to NPM
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
              if: env.NODE_AUTH_TOKEN != null && (startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch')
              run: |
                  ./scripts/npm_publish_lib.sh
